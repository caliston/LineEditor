# This is a basic workflow to help you get started with Actions

name: CI

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ "*" ]
  pull_request:
    branches: [ "*" ]

jobs:
  build:
    # The type of runner that the job will run on
    runs-on: ubuntu-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Zip up the source to send to JFPaaS
      run: zip -9 /tmp/source-archive.zip * .robuild.yml

    - name: Send the file to JFPatch as a service
      run: curl -F 'source=@/tmp/source-archive.zip' http://jfpatch.riscos.online/build/json > /tmp/output.json

    - name: Show any messages
      run: jq .output[] /tmp/output.json

    - name: Check the return code
      run: |
        rc=$(jq -r .rc /tmp/output.json)
        echo RC: $rc
        if [ "$rc" != "0" ] ; then
            echo "FAILED" >&2
            exit 1
        fi

    - name: Extract output archive
      run: |
        jq -r .data /tmp/output.json > /tmp/output.base64
        base64 --decode /tmp/output.base64 > /tmp/LineEditor.zip

    - uses: actions/upload-artifact@v2
      with:
        name: LineEditor
        path: /tmp/LineEditor.zip
      # The artifact that is downloadable from the Actions is actually a zip of the artifacts
      # that we supply. So it will be a regular Zip file containing a RISC OS Zip file.
